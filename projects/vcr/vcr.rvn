''{


    * http://tom.preston-werner.com/2009/05/19/the-git-parable.html
    * http://ryanheathcote.com/git/build-your-own-vcs

''}

def handle_command(string command) {
    if (command ^= "init ") {
        init()
    } else if (command ^= "add ") {

    } else if (command ^= "commit ") {

    } else {
        print("Invalid command '")
        print(command)
        print("'.\n")
        exit(64)
    }
}

def init(string? directory) {
    if (FALSE) { '' TODO: Check for existence of existing repo
        print("This is already a vcr folder.")
        return
    }

    string path = ""
    with (string dir = directory) {
        path = path + dir
    }
    path = path + "/.vcr"

    system("mkdir " + path)               '' vcr directory
    system("mkdir " + path + "/frames")   '' all snapshots
    system("mkdir " + path + "/branches") '' all branches
    system("mkdir " + path + "/tags")     '' all tags
    system("\"\" > " + path + "/config")  '' config file
    system("\"\" > " + path + "/HEAD")    '' current head
}

def ensure_vcr() {
    if (!TRUE) { '' TODO: check for the existing of existing repo
        print("This isn't a vcr folder. Use `vcr init` to make it one.")
        exit(0)
    }
}

def add(string args) {
    ensure_vcr()
}

def commit(string message, string author) {
    ensure_vcr()
    string hash = "" '' date, message, parent_frame, author
    print("!mkdir frames/" + hash)
    print("!mkdir frames/" + hash + "/.frame")
}



'' TODO: Use user input when that's a feature. For now, use these strings and pretend they've come from the user.
string[] inputs = [
    "vcr help", 
    "vcr init", 
    "touch .vcr_ignore", 
    "vcr add .vcr_ignore", 
    "vcr commit -m \"initial commit\""
]
int input_size = 5

'' This method is needed until command line args / input is working
def handle_input(string input) {
    if (input ^= "vcr ") {

    } else {
        system(input)
    }
}

for (int i = 0; i < input_size; i = i + 1) {
    handle_input(inputs[i])
}