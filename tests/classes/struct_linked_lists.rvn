struct Node {

    int value
    Node? child = NULL

    def add (Node self, Node new) {
        self.child = new '' Type checker here doesn't know what fields `self` has, 
                         '' and so can't evaluate the `child` property. :/
    }

}

struct LinkedList {

    Node? head = NULL

    def is_empty (LinkedList list) bool {
        return (list.head == NULL)
    }

    def add (LinkedList self, Node new) {
        with (Node node = self.head) {
            print("Adding new node.\n")
            node.add(node, new)
        } else {
            print("Setting head to new node.\n")
            self.head = new
        }
    }

    '' def foreach (LinkedList self, func<(Node)> f) {
        '' 
    '' }

}

LinkedList list_1 = LinkedList {}

test list_1.is_empty(list_1)

Node n = Node {
    value = 3
}

print(list_1)
list_1.add(list_1, n)
print(list_1)

test !list_1.is_empty(list_1)