%YAML 1.2
---

name: Raven
file_extensions: [rvn]
# first_line_match: "#!/.*?$" # ??? Is this for detecting raven files?
scope: source.raven
variables:
  urlchar: '[\w\-\.~:/\?#\[\]@!$&''\(\)\*\+,;=%]'
  identifier: '[A-Za-z_][A-Za-z_0-9]*'
  number:     '-?\d+(?:[\.\/]\d+)?'
  base_type:  '(?:int|real|rational|bool|string|func|type|any)'
  any_type:   '(?:{{base_type}}|{{identifier}})'

contexts:

  main:
    - include: keywords
    - include: literals
    - include: definitions
    - include: comments
    - include: operators

  definitions:
    - match: '(def)\s+({{identifier}})'
      captures:
        1: keyword.control.raven
        2: entity.name.raven
    - match: '(class)\s+({{identifier}})'
      captures:
        1: storage.type.raven
        2: entity.name.class.raven
    - match: '({{any_type}})\s+({{identifier}})'
      captures:
        1: storage.type.raven
        2: variable.readwrite.raven
    - match: '\('
      scope: punctuation.section.group.begin.raven
      push: parameter_list
        

  keywords:
    - match: '(?:return|if|else|with|while|for|defer|case|when)'
      scope: keyword.control.raven
    - match: '\b(?:print|typeof|tostring)\b'
      scope: support.function.raven
    - match: '\b(?:this)\b'
      scope: variable.language.raven
    - match: '\b(?:abstract)\b'
      scope: storage.modifier.raven

  operators:
    - match: '(?:\||\|\||&|&&|<=|<|>=|>|==|!=|\^=|\$=|~=)'
      scope: keyword.operator.logical.raven
    - match: '(?:\+|\-|\*|\/|\^)'
      scope: keyword.operator.arithmetic.raven
    - match: '='
      scope: keyword.operator.assignment.raven

  # This is a separate scope with different syntax rules
  parameter_list:
    - meta_scope: meta.group.raven
    - match: '\)'
      pop: true
    - match: '(<!")({{any_type}})\s+({{identifier}})'
      captures:
        1: storage.type.raven
        2: variable.parameter.raven
    - include: main

  #----------#
  # Comments #
  #----------#
  _line_comment:
    - include: _comment_markup
    - meta_scope: comment.line.raven
    - match: $
      pop: true
  _block_comment:
    - include: _comment_markup
    - meta_scope: comment.block.raven
    - match: '''\}'
      pop: true
    # Nested block comments
    - match: '''\{'
      scope: punctuation.definition.comment.raven
      push: _block_comment
  comments:
    # Line Comment
    - match: '''''(?!\{)'
      scope: punctuation.definition.comment.raven
      push: _line_comment
    # Block Comment
    - match: '''''\{'
      scope: punctuation.definition.comment.raven
      push: _block_comment

  #----------------#
  # Comment Markup #
  #----------------#
  _comment_markup_heading:
    - meta_scope: markup.heading.raven
    - match: '(?='''')'
      pop: true
    - match: '$'
      pop: true
  _comment_markup:
    # TODOs
    - match: 'TODO:?'
      scope: markup.quote.raven
    # Mentions
    - match: '@.+?(?=\s)'
      scope: markup.quote.raven
    # Headings
    - match: '#'
      scope: markup.heading.raven
      push: _comment_markup_heading
    # Code
    - match: '`.*?`'
      scope: markup.raw.block.raven
    # Checkboxes
    - match: '\[\s\]'
      scope: markup.deleted.raven
    - match: '\[X\]'
      scope: markup.inserted.raven
    # Links
    - match: '[a-z]+?://{{urlchar}}+[\w/]'
      scope: markup.underline.link.raven

  #----------#
  # Literals #
  #----------#
  _string:
    - meta_scope: string.quoted.double.raven
    - match: '\\.'
      scope: constant.character.escape.raven
    - match: '(?!<\\)"'
      scope: punctuation.definition.string.end.raven
      pop: true
  _special_string:
    - meta_scope: string.quoted.double.raven
    - include: _string
    - match: '\{\d+\}'
      scope: constant.other.placeholder.raven
  literals:
    # Strings
    - match: '\$"'
      scope: punctuation.definition.string.begin.raven
      push: _special_string
    - match: '"'
      scope: punctuation.definition.string.begin.raven
      push: _string
    # Numbers
    - match: '\b{{number}}\b'
      scope: constant.numeric.raven
    # Built-in Types
    - match: '\b{{base_type}}\b'
      scope: storage.type.raven
    # Language Constants
    - match: '(?:TRUE|FALSE|NULL)'
      scope: constant.language.raven